# flag = 1
# while flag:
#     try:
#         n = eval(input())
#         xin = input().split(',')
#         yin = input().split(',')
#         flag = 0  # 注意这里
#         sum = 0
#         for i in range(n):
#             sum += int(xin[i]) * int(yin[i])
#             print("x和y的内积是:", sum)
#     except:
#         print("请输入整数")


import numpy as np

# 生成两个向量
# 例如，向量a = [1, 2, 3]，向量b = [4, 5, 6]
a = np.array([1, 2, 3])
b = np.array([33, 3, 3])

#cat
a = np.array([38277,2787,1033,580,633,784,217,327,1156,237,446,241,179,211,1582,3184,905,87,199,98,196,186,71,77,607,98,56,76,102,104,488,1008,4027,96,116,148,1599,512,66,159,535,275,109,100,289,456,516,192,656,948,105,287,205,296,103,100,318,374,117,272,252,411,66,326,468,1624,551,243,1578,642,267,291,4750,851,82,135,1492,383,91,124,265,77,130,231,495,275,107,136,157,85,63,298,286,304,119,289,142,645,241,592,534,1096,778,254,467,846,54,157,641,350,671,778,350,99,727,947,1588,787,253,335,286,261,131,113,256,84,90,112,617,132,55,1403,1099,977,230,108,254,2718,33,1607,172,1007,114,156,405,139,72,89,339,98,62,83,93,76,35,108,129,105,31,36,99,51,30,32,162,39,44,40,119,40,52,33,93,36,34,28,98,44,30,38,183,54,336,70,379,112,212,58,89,96,240,180,1128,336,286,486,293,166,417,494,143,254,77,127,100,73,55,59,250,113,282,86,107,98,102,63,162,89,64,163,58,72,47,114,234,102,140,311,215,85,171,155,1321,948,129,332,218,195,146,286,208,115,351,598,104,111,277,220,322,245,702,197,216,263,1195,8118])
#ls
b = np.array([19065,385,244,137,170,182,87,134,272,52,149,66,66,56,382,674,247,22,71,14,44,55,12,14,128,15,9,24,29,27,184,222,603,41,34,31,567,185,13,65,127,43,15,15,91,91,128,35,116,248,29,37,43,65,17,14,111,95,35,15,111,53,31,27,82,307,95,62,494,131,42,87,980,213,16,56,343,71,20,15,81,15,24,48,125,69,15,34,56,13,9,42,79,63,33,106,43,182,71,125,124,231,156,56,135,144,6,27,142,64,196,168,117,30,162,241,340,175,74,70,87,50,19,16,80,34,25,21,139,21,11,268,213,162,41,22,67,636,35,288,44,253,17,19,124,16,3,8,32,15,9,13,21,5,10,7,17,16,8,3,34,21,4,2,93,3,4,3,12,4,21,16,27,6,26,36,45,28,10,7,16,11,78,6,110,9,119,10,21,37,25,33,208,45,102,122,195,101,207,119,125,66,26,21,30,18,19,15,57,37,46,23,25,19,25,13,35,14,14,24,17,16,16,20,44,33,34,9,27,9,31,14,341,190,15,48,62,59,22,48,67,23,132,192,26,27,57,29,50,16,232,44,41,65,74,2509])

# whoami 文件
b = np.array([19082,319,221,120,224,169,88,104,250,44,113,74,51,50,342,564,223,17,60,11,37,40,7,13,189,18,11,24,33,33,169,183,365,29,36,23,458,163,6,63,108,31,8,11,65,33,114,39,104,198,23,33,42,62,19,26,96,71,27,8,19,29,18,10,65,245,81,63,431,110,33,43,823,165,14,26,271,62,18,9,60,11,25,38,100,66,11,30,51,8,16,42,68,57,31,89,35,141,45,120,98,187,130,63,117,123,4,24,121,56,134,125,82,4,144,202,266,146,59,35,88,45,34,33,42,14,16,9,116,14,3,227,174,132,33,17,59,495,3,235,39,213,13,16,106,15,5,3,33,15,6,11,14,3,2,18,94,4,22,33,47,10,5,3,15,6,4,26,15,4,7,28,43,2,4,11,42,6,6,6,20,9,64,13,40,11,59,4,14,33,19,22,166,33,47,76,77,13,103,91,24,26,46,13,54,164,71,26,57,124,58,19,15,33,29,14,42,22,21,24,17,11,12,22,49,32,26,12,27,15,25,8,215,164,16,26,45,41,13,31,47,20,107,168,24,16,48,27,44,19,217,34,32,62,59,2142])
# freq.c文件
b = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 331, 1, 10, 4, 0, 4, 0, 0, 16, 16, 2, 6, 11, 1, 4, 16, 10, 3, 5, 1, 0, 6, 4, 0, 0, 0, 2, 18, 6, 8, 6, 0, 0, 0, 3, 0, 0, 8, 7, 0, 0, 4, 0, 0, 3, 0, 1, 0, 0, 0, 6, 3, 0, 5, 0, 0, 1, 0, 3, 10, 3, 10, 0, 4, 0, 15, 8, 14, 15, 45, 32, 9, 7, 43, 0, 0, 13, 2, 32, 8, 6, 5, 33, 13, 18, 16, 3, 1, 1, 8, 2, 8, 0, 8, 0, 0, 0, 0, 2, 0, 2, 1, 2, 4, 1, 2, 2, 0, 1, 0, 2, 4, 0, 0, 0, 3, 0, 2, 2, 2, 0, 0, 3, 0, 1, 0, 1, 1, 0, 3, 0, 0, 1, 0, 0, 1, 0, 0, 2, 0, 2, 2, 3, 3, 5, 0, 1, 0, 0, 0, 1, 0, 2, 2, 4, 4, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 13, 8, 7, 5, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])

# 65535 限制大小
#ls
a = np.array([20011, 1859, 572, 324, 260, 527, 88, 182, 597, 152, 68, 49, 62, 133, 36, 2100, 223, 57, 159, 43, 72, 126, 34, 33, 176, 56, 29, 26, 28, 53, 360, 666, 185, 61, 66, 40, 573, 259, 35, 33, 193, 84, 58, 49, 56, 84, 185, 111, 126, 439, 40, 58, 59, 184, 51, 54, 92, 207, 38, 81, 81, 318, 30, 75, 232, 619, 47, 86, 610, 171, 89, 124, 2846, 375, 32, 37, 663, 137, 29, 27, 82, 39, 20, 104, 152, 134, 58, 64, 59, 40, 26, 122, 124, 165, 65, 178, 66, 99, 52, 127, 119, 151, 362, 60, 179, 108, 27, 52, 116, 81, 87, 105, 113, 33, 119, 132, 498, 319, 61, 91, 94, 61, 41, 48, 142, 56, 51, 78, 385, 92, 39, 760, 679, 571, 65, 61, 121, 1467, 16, 1020, 29, 587, 45, 47, 231, 38, 28, 22, 163, 67, 31, 54, 44, 40, 19, 58, 56, 57, 18, 24, 54, 25, 20, 18, 37, 20, 30, 25, 96, 32, 33, 19, 29, 28, 26, 14, 53, 36, 21, 30, 43, 31, 195, 19, 205, 64, 140, 35, 40, 50, 131, 114, 741, 199, 147, 315, 133, 106, 230, 293, 82, 134, 39, 46, 32, 39, 25, 41, 109, 78, 186, 45, 34, 39, 41, 31, 88, 45, 35, 76, 28, 42, 30, 70, 119, 53, 88, 77, 91, 72, 96, 83, 894, 551, 59, 213, 101, 102, 93, 151, 107, 66, 287, 454, 55, 56, 150, 118, 160, 155, 495, 104, 128, 154, 227, 3300])
b = np.array([19082, 319, 221, 120, 224, 169, 88, 104, 250, 44, 113, 74, 51, 50, 342, 564, 223, 17, 60, 11, 37, 40, 7, 13, 189, 18, 11, 24, 33, 33, 169, 183, 365, 29, 36, 23, 458, 163, 6, 63, 108, 31, 8, 11, 65, 33, 114, 39, 104, 198, 23, 33, 42, 62, 19, 26, 96, 71, 27, 8, 19, 29, 18, 10, 65, 245, 81, 63, 431, 110, 33, 43, 823, 165, 14, 26, 271, 62, 18, 9, 60, 11, 25, 38, 100, 66, 11, 30, 51, 8, 16, 42, 68, 57, 31, 89, 35, 141, 45, 120, 98, 187, 130, 63, 117, 123, 4, 24, 121, 56, 134, 125, 82, 4, 144, 202, 266, 146, 59, 35, 88, 45, 34, 33, 42, 14, 16, 9, 116, 14, 3, 227, 174, 132, 33, 17, 59, 495, 3, 235, 39, 213, 13, 16, 106, 15, 5, 3, 33, 15, 6, 11, 14, 3, 2, 18, 94, 4, 22, 33, 47, 10, 5, 3, 15, 6, 4, 26, 15, 4, 7, 28, 43, 2, 4, 11, 42, 6, 6, 6, 20, 9, 64, 13, 40, 11, 59, 4, 14, 33, 19, 22, 166, 33, 47, 76, 77, 13, 103, 91, 24, 26, 46, 13, 54, 164, 71, 26, 57, 124, 58, 19, 15, 33, 29, 14, 42, 22, 21, 24, 17, 11, 12, 22, 49, 32, 26, 12, 27, 15, 25, 8, 215, 164, 16, 26, 45, 41, 13, 31, 47, 20, 107, 168, 24, 16, 48, 27, 44, 19, 217, 34, 32, 62, 59, 2142])
# 计算内积
dot_product = np.dot(a, b)

# 或者使用更现代的点乘运算符
# dot_product = a @ b

ma = np.linalg.norm(a)
print(f"a向量的模是: {ma}")

mb = np.linalg.norm(b)
print(f"b向量的模是: {mb}")


print("向量a和向量b的内积是:", dot_product)
print(f"向量a和向量b的标准化内积是:{dot_product/(ma*mb)}" )
